1. Linux文件操作相关函数
		stat函数 *****
				穿透(追踪)函数 -- 软链接
		lstat函数
				不穿透(追踪)
		access函数
		chmod函数
		chown函数
		truncate函数	***
				文件长度 100
				第二个参数指定长度为 20
				..................  300 -> 文件被拓展
		链接函数
			link函数
			symlink函数
			readlink函数
			unlink函数	*****
		rename函数
2. Linux目录操作相关函数
3. fcntl 函数
		改变已经打开的文件的属性
		
			打开文件的时候: 只读
					修改文件的: 添加追加 O_APPEND
					
4. dup, dup2函数
		复制现有的文件描述符


解决gcc编译过程中c99语法报错的问题
~/.bashrc
alias gcc='gcc -std=gnu99'

索引节点inode：保存的其实是实际的数据的一些信息，这些信息称为“元数据”(也就是对文件属性的描述)。
例如：文件大小，设备标识符，用户标识符，用户组标识符，文件模式，扩展属性，文件读取或修改的时间戳，
链接数量，指向存储该内容的磁盘区块的指针，文件分类等等。
( 注意数据分成：元数据+数据本身 )

注意inode怎样生成的：每个inode节点的大小，一般是128字节或256字节。inode节点的总数，在格式化时就给定
(现代OS可以动态变化)，一般每2KB就设置一个inode。一般文件系统中很少有文件小于2KB的，所以预定按照2KB分，
一般inode是用不完的。所以inode在文件系统安装的时候会有一个默认数量，后期会根据实际的需要发生变化。

注意inode号：inode号是唯一的，表示不同的文件。其实在Linux内部的时候，访问文件都是通过inode号来进行的，
所谓文件名仅仅是给用户容易使用的。当我们打开一个文件的时候，首先，系统找到这个文件名对应的inode号；然后，
通过inode号，得到inode信息，最后，由inode找到文件数据所在的block，现在可以处理文件数据了。

inode和文件的关系：当创建一个文件的时候，就给文件分配了一个inode。一个inode只对应一个实际文件，
一个文件也会只有一个inode。inodes最大数量就是文件的最大数量。


FILE* fp = open("file");
